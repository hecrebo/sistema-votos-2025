// configurar-firebase.js
// Script para configurar Firebase correctamente

console.log('üîß INICIANDO CONFIGURACI√ìN DE FIREBASE');
console.log('=' .repeat(50));

// Funci√≥n para verificar si Firebase est√° configurado correctamente
function verificarConfiguracionFirebase() {
    console.log('üîç Verificando configuraci√≥n actual de Firebase...');
    
    const config = {
        firebaseAvailable: window.firebaseAvailable,
        firebaseDB: !!window.firebaseDB,
        firebaseObject: typeof firebase !== 'undefined',
        votesCollection: !!(window.firebaseDB && window.firebaseDB.votesCollection),
        ubchCollection: !!(window.firebaseDB && window.firebaseDB.ubchCollection)
    };
    
    console.log('üìä Estado actual:', config);
    
    if (config.firebaseAvailable && config.firebaseDB && config.votesCollection) {
        console.log('‚úÖ Firebase est√° configurado correctamente');
        return true;
    } else {
        console.log('‚ùå Firebase no est√° configurado correctamente');
        return false;
    }
}

// Funci√≥n para mostrar instrucciones de configuraci√≥n
function mostrarInstruccionesConfiguracion() {
    console.log('\nüìã INSTRUCCIONES PARA CONFIGURAR FIREBASE:');
    console.log('=' .repeat(50));
    console.log('1. Ve a https://console.firebase.google.com/');
    console.log('2. Crea un nuevo proyecto o selecciona uno existente');
    console.log('3. Ve a Configuraci√≥n del proyecto > General');
    console.log('4. En "Tus apps", haz clic en el √≠cono de web (</>)');
    console.log('5. Registra tu app con un nombre (ej: "sistema-votos-web")');
    console.log('6. Copia la configuraci√≥n que te proporciona Firebase');
    console.log('7. Reemplaza los valores en firebase-config.js');
    console.log('8. Ve a Firestore Database y crea una base de datos');
    console.log('9. Configura las reglas de seguridad seg√∫n tus necesidades');
    console.log('\nüí° Ejemplo de configuraci√≥n v√°lida:');
    console.log('const firebaseConfig = {');
    console.log('    apiKey: "AIzaSyC...tu-api-key-real...",');
    console.log('    authDomain: "tu-proyecto.firebaseapp.com",');
    console.log('    projectId: "tu-proyecto-id",');
    console.log('    storageBucket: "tu-proyecto.appspot.com",');
    console.log('    messagingSenderId: "123456789012",');
    console.log('    appId: "1:123456789012:web:abcdefghijklmnop"');
    console.log('};');
}

// Funci√≥n para probar conexi√≥n a Firebase
async function probarConexionFirebase() {
    console.log('\nüß™ Probando conexi√≥n a Firebase...');
    
    if (!window.firebaseDB || !window.firebaseDB.votesCollection) {
        console.log('‚ùå Firebase no est√° disponible para pruebas');
        return false;
    }
    
    try {
        // Intentar leer un documento de prueba
        const testSnapshot = await window.firebaseDB.votesCollection.limit(1).get();
        console.log('‚úÖ Conexi√≥n a Firebase exitosa');
        console.log(`üìä Documentos encontrados: ${testSnapshot.size}`);
        return true;
    } catch (error) {
        console.error('‚ùå Error conectando a Firebase:', error.message);
        return false;
    }
}

// Funci√≥n para crear colecciones de prueba
async function crearColeccionesPrueba() {
    console.log('\nüîß Creando colecciones de prueba...');
    
    if (!window.firebaseDB || !window.firebaseDB.votesCollection) {
        console.log('‚ùå Firebase no disponible para crear colecciones');
        return false;
    }
    
    try {
        // Crear documento de prueba en votes
        const testVote = {
            name: 'Prueba de Conexi√≥n',
            cedula: '00000000',
            telefono: '0000000000',
            sexo: 'M',
            edad: 25,
            ubch: 'UBCH PRUEBA',
            community: 'Comunidad Prueba',
            registeredBy: 'sistema',
            voted: false,
            registeredAt: new Date().toISOString(),
            createdAt: new Date().toISOString()
        };
        
        await window.firebaseDB.votesCollection.add(testVote);
        console.log('‚úÖ Documento de prueba creado en colecci√≥n votes');
        
        // Crear configuraci√≥n UBCH si no existe
        if (window.firebaseDB.ubchCollection) {
            await window.firebaseDB.initializeUBCHConfig();
            console.log('‚úÖ Configuraci√≥n UBCH inicializada');
        }
        
        return true;
    } catch (error) {
        console.error('‚ùå Error creando colecciones de prueba:', error.message);
        return false;
    }
}

// Funci√≥n para mostrar estado del sistema
function mostrarEstadoSistema() {
    console.log('\nüìä ESTADO DEL SISTEMA:');
    console.log('=' .repeat(30));
    
    const estado = {
        firebase: window.firebaseAvailable ? '‚úÖ Online' : '‚ùå Offline',
        localStorage: '‚úÖ Disponible',
        serviceWorker: 'serviceWorker' in navigator ? '‚úÖ Disponible' : '‚ùå No disponible',
        network: navigator.onLine ? '‚úÖ Online' : '‚ùå Offline'
    };
    
    Object.entries(estado).forEach(([servicio, status]) => {
        console.log(`${servicio}: ${status}`);
    });
    
    // Mostrar datos locales
    const localVotes = localStorage.getItem('votes');
    const localUser = localStorage.getItem('currentUser');
    
    console.log(`\nüíæ Datos locales:`);
    console.log(`- Usuario: ${localUser ? '‚úÖ Configurado' : '‚ùå No configurado'}`);
    console.log(`- Votos: ${localVotes ? JSON.parse(localVotes).length : 0} registros`);
}

// Funci√≥n principal de configuraci√≥n
async function configurarFirebase() {
    console.log('üöÄ Iniciando proceso de configuraci√≥n...\n');
    
    // 1. Verificar configuraci√≥n actual
    const configurado = verificarConfiguracionFirebase();
    
    if (!configurado) {
        console.log('\n‚ö†Ô∏è Firebase no est√° configurado correctamente');
        mostrarInstruccionesConfiguracion();
        mostrarEstadoSistema();
        return;
    }
    
    // 2. Probar conexi√≥n
    const conexionExitosa = await probarConexionFirebase();
    
    if (!conexionExitosa) {
        console.log('\n‚ùå No se pudo conectar a Firebase');
        console.log('üîß Verifica tu configuraci√≥n y reglas de seguridad');
        return;
    }
    
    // 3. Crear colecciones de prueba
    const coleccionesCreadas = await crearColeccionesPrueba();
    
    if (coleccionesCreadas) {
        console.log('\nüéâ ¬°Firebase configurado exitosamente!');
        console.log('‚úÖ El sistema ahora sincronizar√° con Firebase');
    }
    
    // 4. Mostrar estado final
    mostrarEstadoSistema();
}

// Funci√≥n para limpiar datos de prueba
async function limpiarDatosPrueba() {
    console.log('\nüßπ Limpiando datos de prueba...');
    
    if (!window.firebaseDB || !window.firebaseDB.votesCollection) {
        console.log('‚ùå Firebase no disponible');
        return;
    }
    
    try {
        // Buscar y eliminar documentos de prueba
        const snapshot = await window.firebaseDB.votesCollection
            .where('name', '==', 'Prueba de Conexi√≥n')
            .get();
        
        const batch = window.firebaseDB.db.batch();
        snapshot.docs.forEach(doc => {
            batch.delete(doc.ref);
        });
        
        await batch.commit();
        console.log(`‚úÖ ${snapshot.size} documentos de prueba eliminados`);
        
    } catch (error) {
        console.error('‚ùå Error limpiando datos de prueba:', error.message);
    }
}

// Exportar funciones para uso manual
window.configurarFirebase = configurarFirebase;
window.verificarConfiguracionFirebase = verificarConfiguracionFirebase;
window.probarConexionFirebase = probarConexionFirebase;
window.limpiarDatosPrueba = limpiarDatosPrueba;
window.mostrarEstadoSistema = mostrarEstadoSistema;

// Ejecutar configuraci√≥n autom√°ticamente
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', configurarFirebase);
} else {
    setTimeout(configurarFirebase, 2000);
}

console.log('‚úÖ Script de configuraci√≥n de Firebase cargado');
console.log('üí° Ejecuta window.configurarFirebase() para configurar manualmente'); 