rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Regla por defecto: Nadie puede acceder a menos que se permita explícitamente.
    match /{document=**} {
      allow read, write: if false;
    }

    // Colección de UBCH: Todos los usuarios autenticados pueden leer. Nadie puede escribir excepto desde la consola.
    match /ubchData/{ubchId} {
      allow read: if request.auth != null;
      allow write: if false; // Solo se gestionan desde el panel de admin o la consola de Firebase
    }

    // Colección de Comunidades: Todos los usuarios autenticados pueden leer.
    match /communities/{communityId} {
      allow read: if request.auth != null;
      allow write: if false; // Solo se gestionan desde el panel de admin o la consola de Firebase
    }

    // Colección de Votos (Registros de Personas)
    match /votes/{voteId} {
      // PERMISOS DE LECTURA:
      // Cualquier usuario autenticado puede leer la lista de votos.
      allow read: if request.auth != null;

      // PERMISOS DE CREACIÓN:
      // Cualquier usuario autenticado puede crear un nuevo registro.
      // Se valida que la cédula no esté vacía y que el `registeredBy` sea el del usuario actual.
      allow create: if request.auth != null
                    && request.resource.data.cedula is string
                    && request.resource.data.cedula != ""
                    && request.resource.data.registeredBy == request.auth.token.name; // Asumiendo que el nombre de usuario está en el token

      // PERMISOS DE ACTUALIZACIÓN (EDITAR / CONFIRMAR VOTO):
      // Permite actualizar si el usuario está autenticado.
      // Se podría restringir más para que solo admin/superadmin puedan editar ciertos campos.
      allow update: if request.auth != null;

      // PERMISOS DE ELIMINACIÓN:
      // Solo un 'superusuario' o 'admin' puede eliminar registros.
      // (Esto requiere que el rol del usuario se guarde en los 'custom claims' del token de autenticación).
      // Por ahora, lo dejaremos abierto a cualquier usuario autenticado, pero es un punto a mejorar.
      allow delete: if request.auth != null;
    }
  }
} 